{"version":3,"file":"expandRowsFn.js","sources":["../../../src/utils/expandRowsFn.ts"],"sourcesContent":["import { ReactTable, Row, RowModel } from '../types'\nimport { Options } from '../types'\nimport { ExpandedState } from '../features/Expanding'\n\nexport const expandRowsFn: Options<any, any, {}, {}, {}>['expandRowsFn'] = <\n  TData,\n  TValue,\n  TFilterFns,\n  TSortingFns,\n  TAggregationFns\n>(\n  instance: ReactTable<TData, TValue, TFilterFns, TSortingFns, TAggregationFns>,\n  _expandedState: ExpandedState,\n  sortedRowModel: RowModel<\n    TData,\n    TValue,\n    TFilterFns,\n    TSortingFns,\n    TAggregationFns\n  >\n): RowModel<TData, TValue, TFilterFns, TSortingFns, TAggregationFns> => {\n  const expandedRows: Row<\n    TData,\n    TValue,\n    TFilterFns,\n    TSortingFns,\n    TAggregationFns\n  >[] = []\n\n  const { expandSubRows } = instance.options\n\n  const handleRow = (\n    row: Row<TData, TValue, TFilterFns, TSortingFns, TAggregationFns>\n  ) => {\n    expandedRows.push(row)\n\n    if (\n      expandSubRows &&\n      row.subRows?.length &&\n      instance.getIsRowExpanded(row.id)\n    ) {\n      row.subRows.forEach(handleRow)\n    }\n  }\n\n  sortedRowModel.rows.forEach(handleRow)\n\n  return {\n    rows: expandedRows,\n    flatRows: sortedRowModel.flatRows,\n    rowsById: sortedRowModel.rowsById,\n  }\n}\n"],"names":["expandRowsFn","instance","_expandedState","sortedRowModel","expandedRows","expandSubRows","options","handleRow","row","push","subRows","length","getIsRowExpanded","id","forEach","rows","flatRows","rowsById"],"mappings":";;;;;;;;;;;;;;IAIaA,YAA2D,GAAG,SAA9DA,YAA8D,CAOzEC,QAPyE,EAQzEC,cARyE,EASzEC,cATyE,EAgBH;AACtE,MAAMC,YAMH,GAAG,EANN;AAQA,MAAQC,aAAR,GAA0BJ,QAAQ,CAACK,OAAnC,CAAQD,aAAR;;AAEA,MAAME,SAAS,GAAG,SAAZA,SAAY,CAChBC,GADgB,EAEb;AAAA;;AACHJ,IAAAA,YAAY,CAACK,IAAb,CAAkBD,GAAlB;;AAEA,QACEH,aAAa,oBACbG,GAAG,CAACE,OADS,aACb,aAAaC,MADb,IAEAV,QAAQ,CAACW,gBAAT,CAA0BJ,GAAG,CAACK,EAA9B,CAHF,EAIE;AACAL,MAAAA,GAAG,CAACE,OAAJ,CAAYI,OAAZ,CAAoBP,SAApB;AACD;AACF,GAZD;;AAcAJ,EAAAA,cAAc,CAACY,IAAf,CAAoBD,OAApB,CAA4BP,SAA5B;AAEA,SAAO;AACLQ,IAAAA,IAAI,EAAEX,YADD;AAELY,IAAAA,QAAQ,EAAEb,cAAc,CAACa,QAFpB;AAGLC,IAAAA,QAAQ,EAAEd,cAAc,CAACc;AAHpB,GAAP;AAKD;;;;"}