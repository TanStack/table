{"version":3,"file":"index.js","sources":["../../src/index.tsx"],"sourcesContent":["import React from 'react'\nimport { ReactTable } from '@tanstack/react-table'\n\nimport useLocalStorage from './useLocalStorage'\nimport { useIsMounted } from './utils'\n\nimport { Panel, Button } from './styledComponents'\nimport { ThemeProvider, defaultTheme as theme } from './theme'\n// import { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\nimport Logo from './Logo'\n\ninterface DevtoolsOptions {\n  /**\n   * The react table instance to attach the devtools to.\n   */\n  instance: any\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n   */\n  panelProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  toggleButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to render the devtools inside a different type of container element for a11y purposes.\n   * Any string which corresponds to a valid intrinsic JSX element is allowed.\n   * Defaults to 'footer'.\n   */\n  containerElement?: string | any\n}\n\ninterface DevtoolsPanelOptions {\n  /**\n   * The react table instance to attach the devtools to.\n   */\n  instance: any\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: React.CSSProperties\n  /**\n   * The standard React className property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen: (isOpen: boolean) => void\n}\n\nexport function ReactTableDevtools({\n  initialIsOpen,\n  instance,\n  panelProps = {},\n  toggleButtonProps = {},\n  containerElement: Container = 'footer',\n}: DevtoolsOptions): React.ReactElement | null {\n  const rootRef = React.useRef<HTMLDivElement>(null)\n  const panelRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'reactTableDevtoolsOpen',\n    initialIsOpen,\n  )\n  const isMounted = useIsMounted()\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  // Do not render on the server\n  if (!isMounted()) return null\n\n  return (\n    <Container ref={rootRef} className=\"ReactTableDevtools\">\n      <ThemeProvider theme={theme}>\n        {!isOpen ? (\n          <button\n            type=\"button\"\n            {...otherToggleButtonProps}\n            aria-label=\"Open React Table Devtools\"\n            onClick={(e) => {\n              setIsOpen(true)\n              onToggleClick && onToggleClick(e)\n            }}\n            style={{\n              background: 'none',\n              border: 0,\n              padding: 0,\n              margin: '.5rem',\n              display: 'inline-flex',\n              fontSize: '1.5em',\n              cursor: 'pointer',\n              width: 'fit-content',\n              ...toggleButtonStyle,\n            }}\n          >\n            <Logo aria-hidden />\n          </button>\n        ) : (\n          <ReactTableDevtoolsPanel\n            ref={panelRef as any}\n            {...otherPanelProps}\n            instance={instance}\n            isOpen={isOpen}\n            setIsOpen={setIsOpen}\n            style={{\n              maxHeight: '80vh',\n              width: '100%',\n              ...panelStyle,\n            }}\n          />\n        )}\n      </ThemeProvider>\n    </Container>\n  )\n}\n\nexport const ReactTableDevtoolsPanel = React.forwardRef<\n  HTMLDivElement,\n  DevtoolsPanelOptions\n>(function ReactTableDevtoolsPanel(props, ref): React.ReactElement {\n  const {\n    instance,\n    isOpen = true,\n    setIsOpen,\n    ...panelProps\n  } = props as DevtoolsPanelOptions & {\n    instance: ReactTable<unknown, unknown, {}, {}, {}>\n  }\n\n  // const [activeMatchId, setActiveRouteId] = useLocalStorage(\n  //   'reactTableDevtoolsActiveRouteId',\n  //   '',\n  // )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Panel ref={ref} className=\"ReactTableDevtoolsPanel\" {...panelProps}>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n            .ReactTableDevtoolsPanel * {\n              scrollbar-color: ${theme.backgroundAlt} ${theme.gray};\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar, .ReactTableDevtoolsPanel scrollbar {\n              width: 1em;\n              height: 1em;\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar-track, .ReactTableDevtoolsPanel scrollbar-track {\n              background: ${theme.backgroundAlt};\n            }\n\n            .ReactTableDevtoolsPanel *::-webkit-scrollbar-thumb, .ReactTableDevtoolsPanel scrollbar-thumb {\n              background: ${theme.gray};\n              border-radius: .5em;\n              border: 3px solid ${theme.backgroundAlt};\n            }\n          `,\n          }}\n        />\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              padding: '.5em',\n              background: theme.backgroundAlt,\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <Logo\n              aria-hidden\n              style={{\n                marginRight: '.5em',\n              }}\n              onClick={() => setIsOpen(false)}\n            />\n            <div\n              style={{\n                marginRight: 'auto',\n                fontSize: 'clamp(.8rem, 2vw, 1.3rem)',\n                fontWeight: 'bold',\n              }}\n            >\n              React Table{' '}\n              <span\n                style={{\n                  fontWeight: 100,\n                }}\n              >\n                Devtools\n              </span>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              {isOpen && setIsOpen ? (\n                <Button\n                  type=\"button\"\n                  aria-label=\"Close React Table Devtools\"\n                  onClick={() => {\n                    setIsOpen(false)\n                  }}\n                >\n                  Close\n                </Button>\n              ) : null}\n            </div>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexWrap: 'wrap',\n              overflowY: 'auto',\n              flex: '1',\n            }}\n          >\n            <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Instance\"\n                value={instance}\n                defaultExpanded={false}\n              />\n              <div\n                style={{\n                  height: '.5rem',\n                }}\n              />\n              <Explorer\n                label=\"State\"\n                value={instance.getState()}\n                defaultExpanded={false}\n              />\n              <div\n                style={{\n                  height: '.5rem',\n                }}\n              />\n              <Explorer\n                label=\"Columns\"\n                value={instance.getAllColumns()}\n                defaultExpanded={false}\n              />\n            </div>\n            <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Core Model\"\n                value={instance.getCoreRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Column Filtered Rows\"\n                value={instance.getColumnFilteredRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Global Filtered Rows\"\n                value={instance.getGlobalFilteredRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Sorted Rows\"\n                value={instance.getSortedRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Grouped Rows\"\n                value={instance.getGroupedRowModel()}\n                defaultExpanded={false}\n              />\n              <Explorer\n                label=\"Expanded Rows\"\n                value={instance.getExpandedRowModel()}\n                defaultExpanded={false}\n              />\n            </div>\n            {/* <div\n              style={{\n                flex: '1 1 auto',\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Row Model\"\n                value={instance.getRowModel()}\n                defaultExpanded={false}\n              />\n            </div> */}\n          </div>\n        </div>\n      </Panel>\n    </ThemeProvider>\n  )\n})\n"],"names":["ReactTableDevtools","initialIsOpen","instance","panelProps","toggleButtonProps","containerElement","Container","rootRef","React","useRef","panelRef","useLocalStorage","isOpen","setIsOpen","isMounted","useIsMounted","style","panelStyle","otherPanelProps","toggleButtonStyle","onToggleClick","onClick","otherToggleButtonProps","ThemeProvider","theme","e","background","border","padding","margin","display","fontSize","cursor","width","Logo","maxHeight","ReactTableDevtoolsPanel","forwardRef","props","ref","Panel","__html","backgroundAlt","gray","flex","minHeight","overflow","borderRight","grayAlt","flexDirection","justifyContent","alignItems","marginRight","fontWeight","Button","flexWrap","overflowY","Explorer","height","getState","getAllColumns","getCoreRowModel","getColumnFilteredRowModel","getGlobalFilteredRowModel","getSortedRowModel","getGroupedRowModel","getExpandedRowModel"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEO,SAASA,kBAAT,OAMwC;AAAA,MAL7CC,aAK6C,QAL7CA,aAK6C;AAAA,MAJ7CC,QAI6C,QAJ7CA,QAI6C;AAAA,6BAH7CC,UAG6C;AAAA,MAH7CA,UAG6C,gCAHhC,EAGgC;AAAA,mCAF7CC,iBAE6C;AAAA,MAF7CA,iBAE6C,sCAFzB,EAEyB;AAAA,mCAD7CC,gBAC6C;AAAA,MAD3BC,SAC2B,sCADf,QACe;AAC7C,MAAMC,OAAO,GAAGC,yBAAK,CAACC,MAAN,CAA6B,IAA7B,CAAhB;AACA,MAAMC,QAAQ,GAAGF,yBAAK,CAACC,MAAN,CAA6B,IAA7B,CAAjB;;AACA,yBAA4BE,0BAAe,CACzC,wBADyC,EAEzCV,aAFyC,CAA3C;AAAA,MAAOW,MAAP;AAAA,MAAeC,SAAf;;AAIA,MAAMC,SAAS,GAAGC,kBAAY,EAA9B;;AAEA,0BAAuDZ,UAAvD,CAAQa,KAAR;AAAA,MAAeC,UAAf,kCAA4B,EAA5B;AAAA,MAAmCC,eAAnC,0DAAuDf,UAAvD;;AAEA,8BAIIC,iBAJJ,CACEY,KADF;AAAA,MACSG,iBADT,sCAC6B,EAD7B;AAAA,MAEWC,aAFX,GAIIhB,iBAJJ,CAEEiB,OAFF;AAAA,MAGKC,sBAHL,0DAIIlB,iBAJJ,cAX6C;;;AAkB7C,MAAI,CAACU,SAAS,EAAd,EAAkB,OAAO,IAAP;AAElB,sBACEN,wCAAC,SAAD;AAAW,IAAA,GAAG,EAAED,OAAhB;AAAyB,IAAA,SAAS,EAAC;AAAnC,kBACEC,wCAACe,mBAAD;AAAe,IAAA,KAAK,EAAEC;AAAtB,KACG,CAACZ,MAAD,gBACCJ;AACE,IAAA,IAAI,EAAC;AADP,KAEMc,sBAFN;AAGE,kBAAW,2BAHb;AAIE,IAAA,OAAO,EAAE,iBAACG,CAAD,EAAO;AACdZ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAO,MAAAA,aAAa,IAAIA,aAAa,CAACK,CAAD,CAA9B;AACD,KAPH;AAQE,IAAA,KAAK;AACHC,MAAAA,UAAU,EAAE,MADT;AAEHC,MAAAA,MAAM,EAAE,CAFL;AAGHC,MAAAA,OAAO,EAAE,CAHN;AAIHC,MAAAA,MAAM,EAAE,OAJL;AAKHC,MAAAA,OAAO,EAAE,aALN;AAMHC,MAAAA,QAAQ,EAAE,OANP;AAOHC,MAAAA,MAAM,EAAE,SAPL;AAQHC,MAAAA,KAAK,EAAE;AARJ,OASAd,iBATA;AARP,mBAoBEX,wCAAC0B,eAAD;AAAM;AAAN,IApBF,CADD,gBAwBC1B,wCAAC,uBAAD;AACE,IAAA,GAAG,EAAEE;AADP,KAEMQ,eAFN;AAGE,IAAA,QAAQ,EAAEhB,QAHZ;AAIE,IAAA,MAAM,EAAEU,MAJV;AAKE,IAAA,SAAS,EAAEC,SALb;AAME,IAAA,KAAK;AACHsB,MAAAA,SAAS,EAAE,MADR;AAEHF,MAAAA,KAAK,EAAE;AAFJ,OAGAhB,UAHA;AANP,KAzBJ,CADF,CADF;AA2CD;IAEYmB,uBAAuB,gBAAG5B,yBAAK,CAAC6B,UAAN,CAGrC,SAASD,uBAAT,CAAiCE,KAAjC,EAAwCC,GAAxC,EAAiE;AACjE,cAKID,KALJ;AAAA,MACEpC,QADF,SACEA,QADF;AAAA,2BAEEU,MAFF;AAAA,MAEEA,MAFF,6BAEW,IAFX;AAAA,MAGEC,SAHF,SAGEA,SAHF;AAAA,MAIKV,UAJL,6EADiE;AAWjE;AACA;AACA;;;AAEA,sBACEK,wCAACe,mBAAD;AAAe,IAAA,KAAK,EAAEC;AAAtB,kBACEhB,wCAACgC,sBAAD;AAAO,IAAA,GAAG,EAAED,GAAZ;AAAiB,IAAA,SAAS,EAAC;AAA3B,KAAyDpC,UAAzD,gBACEK;AACE,IAAA,uBAAuB,EAAE;AACvBiC,MAAAA,MAAM,kFAEejB,kBAAK,CAACkB,aAFrB,SAEsClB,kBAAK,CAACmB,IAF5C,4UAWUnB,kBAAK,CAACkB,aAXhB,mKAeUlB,kBAAK,CAACmB,IAfhB,+EAiBgBnB,kBAAK,CAACkB,aAjBtB;AADiB;AAD3B,IADF,eAyBElC;AACE,IAAA,KAAK,EAAE;AACLoC,MAAAA,IAAI,EAAE,WADD;AAELC,MAAAA,SAAS,EAAE,KAFN;AAGLV,MAAAA,SAAS,EAAE,MAHN;AAILW,MAAAA,QAAQ,EAAE,MAJL;AAKLC,MAAAA,WAAW,iBAAevB,kBAAK,CAACwB,OAL3B;AAMLlB,MAAAA,OAAO,EAAE,MANJ;AAOLmB,MAAAA,aAAa,EAAE;AAPV;AADT,kBAWEzC;AACE,IAAA,KAAK,EAAE;AACLoB,MAAAA,OAAO,EAAE,MADJ;AAELF,MAAAA,UAAU,EAAEF,kBAAK,CAACkB,aAFb;AAGLZ,MAAAA,OAAO,EAAE,MAHJ;AAILoB,MAAAA,cAAc,EAAE,eAJX;AAKLC,MAAAA,UAAU,EAAE;AALP;AADT,kBASE3C,wCAAC0B,eAAD;AACE,uBADF;AAEE,IAAA,KAAK,EAAE;AACLkB,MAAAA,WAAW,EAAE;AADR,KAFT;AAKE,IAAA,OAAO,EAAE;AAAA,aAAMvC,SAAS,CAAC,KAAD,CAAf;AAAA;AALX,IATF,eAgBEL;AACE,IAAA,KAAK,EAAE;AACL4C,MAAAA,WAAW,EAAE,MADR;AAELrB,MAAAA,QAAQ,EAAE,2BAFL;AAGLsB,MAAAA,UAAU,EAAE;AAHP;AADT,oBAOc,GAPd,eAQE7C;AACE,IAAA,KAAK,EAAE;AACL6C,MAAAA,UAAU,EAAE;AADP;AADT,gBARF,CAhBF,eAgCE7C;AACE,IAAA,KAAK,EAAE;AACLsB,MAAAA,OAAO,EAAE,MADJ;AAELmB,MAAAA,aAAa,EAAE;AAFV;AADT,KAMGrC,MAAM,IAAIC,SAAV,gBACCL,wCAAC8C,uBAAD;AACE,IAAA,IAAI,EAAC,QADP;AAEE,kBAAW,4BAFb;AAGE,IAAA,OAAO,EAAE,mBAAM;AACbzC,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AALH,aADD,GAUG,IAhBN,CAhCF,CAXF,eA8DEL;AACE,IAAA,KAAK,EAAE;AACLsB,MAAAA,OAAO,EAAE,MADJ;AAELyB,MAAAA,QAAQ,EAAE,MAFL;AAGLC,MAAAA,SAAS,EAAE,MAHN;AAILZ,MAAAA,IAAI,EAAE;AAJD;AADT,kBAQEpC;AACE,IAAA,KAAK,EAAE;AACLoC,MAAAA,IAAI,EAAE,UADD;AAELhB,MAAAA,OAAO,EAAE;AAFJ;AADT,kBAMEpB,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,KAAK,EAAEvD,QAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IANF,eAWEM;AACE,IAAA,KAAK,EAAE;AACLkD,MAAAA,MAAM,EAAE;AADH;AADT,IAXF,eAgBElD,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAACyD,QAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IAhBF,eAqBEnD;AACE,IAAA,KAAK,EAAE;AACLkD,MAAAA,MAAM,EAAE;AADH;AADT,IArBF,eA0BElD,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAAC0D,aAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IA1BF,CARF,eAwCEpD;AACE,IAAA,KAAK,EAAE;AACLoC,MAAAA,IAAI,EAAE,UADD;AAELhB,MAAAA,OAAO,EAAE;AAFJ;AADT,kBAMEpB,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAAC2D,eAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IANF,eAWErD,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAAC4D,yBAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IAXF,eAgBEtD,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,sBADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAAC6D,yBAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IAhBF,eAqBEvD,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAAC8D,iBAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IArBF,eA0BExD,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAAC+D,kBAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IA1BF,eA+BEzD,wCAACiD,mBAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,KAAK,EAAEvD,QAAQ,CAACgE,mBAAT,EAFT;AAGE,IAAA,eAAe,EAAE;AAHnB,IA/BF,CAxCF,CA9DF,CAzBF,CADF,CADF;AAuLD,CAzMsC;;;;;"}