{"version":3,"file":"Explorer.js","sources":["../../src/Explorer.tsx"],"sourcesContent":["// @ts-nocheck\n\nimport React from 'react'\n\nimport { styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '0.7rem',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const Value = styled('span', (props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1rem',\n  paddingLeft: '1rem',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7rem',\n})\n\nexport const Expander = ({ expanded, style = {}, ...rest }) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    â–¶\n  </span>\n)\n\nconst DefaultRenderer = ({\n  handleEntry,\n  label,\n  value,\n  // path,\n  subEntries,\n  subEntryPages,\n  type,\n  // depth,\n  expanded,\n  toggle,\n  pageSize,\n  renderer,\n}) => {\n  const [valueSnapshot, setValueSnapshot] = React.useState(undefined)\n  const [expandedPages, setExpandedPages] = React.useState([])\n\n  const refreshValueSnapshot = () => {\n    setValueSnapshot(value())\n  }\n\n  return (\n    <Entry key={label}>\n      {subEntryPages?.length ? (\n        <>\n          <Label onClick={() => toggle()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </Label>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map((entry) => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <Label\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </Label>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map((entry) => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : type === 'function' ? (\n        <>\n          <Explorer\n            renderer={renderer}\n            label={\n              <button onClick={refreshValueSnapshot}>\n                <Label>{label}</Label> ðŸ”„{' '}\n              </button>\n            }\n            value={valueSnapshot}\n            defaultExpanded={{}}\n          />\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label>{' '}\n          <Value>\n            {JSON.stringify(value, Object.getOwnPropertyNames(Object(value)))}\n          </Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  depth = 0,\n  ...rest\n}) {\n  const [expanded, setExpanded] = React.useState(defaultExpanded)\n\n  const toggle = (set) => {\n    setExpanded((old) => (typeof set !== 'undefined' ? set : !old))\n  }\n\n  const path = []\n\n  let type = typeof value\n  let subEntries\n  const subEntryPages = []\n\n  const makeProperty = (sub) => {\n    const newPath = path.concat(sub.label)\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      subPath: sub,\n      path: newPath,\n      depth: depth + 1,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i,\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i,\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'function') {\n    type = 'function'\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    // eslint-disable-next-line no-shadow\n    subEntries = Object.entries(value).map(([label, value]) =>\n      makeProperty({\n        label,\n        value,\n      }),\n    )\n  }\n\n  if (subEntries) {\n    let i = 0\n\n    while (i < subEntries.length) {\n      subEntryPages.push(subEntries.slice(i, i + pageSize))\n      i = i + pageSize\n    }\n  }\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer key={entry.label} renderer={renderer} {...rest} {...entry} />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    depth,\n    value,\n    path,\n    expanded,\n    toggle,\n    pageSize,\n    ...rest,\n  })\n}\n"],"names":["Entry","styled","fontFamily","fontSize","lineHeight","outline","wordBreak","Label","cursor","color","Value","props","theme","danger","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","expanded","style","React","display","transition","transform","DefaultRenderer","handleEntry","label","value","subEntries","subEntryPages","type","toggle","pageSize","renderer","useState","undefined","valueSnapshot","setValueSnapshot","expandedPages","setExpandedPages","refreshValueSnapshot","length","String","toLowerCase","map","entry","entries","index","old","includes","filter","d","JSON","stringify","Object","getOwnPropertyNames","Explorer","defaultExpanded","depth","rest","setExpanded","set","path","makeProperty","sub","newPath","concat","subDefaultExpanded","subPath","Array","isArray","i","Symbol","iterator","from","val","push","slice"],"mappings":"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"}